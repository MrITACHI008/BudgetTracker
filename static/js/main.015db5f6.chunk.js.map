{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTranscation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","state","action","type","transactions","filter","transaction","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTranslation","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTranscation","useState","setText","setAmount","addTranslation","onSubmit","e","preventDefault","newTranslation","floor","random","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.015db5f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2 id='header'>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state,action) => {\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION' :\r\n            return{\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload) \r\n            }\r\n        \r\n            case 'ADD_TRANSACTION':\r\n                return{\r\n                    ...state,\r\n                    transaction : [action.payload, ...state.transactions]\r\n                }\r\n\r\n        default: \r\n        return state;\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state,dispatch] = useReducer (AppReducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTranslation(id) {dispatch ({\r\n        type : 'DELETE_TRANSACTION',\r\n        payload : id\r\n    });\r\n}\r\n    function addTranslation(transaction) {dispatch ({\r\n        type : 'ADD_TRANSACTION',\r\n        payload : transaction\r\n    });\r\n    }\r\n\r\n\r\n\r\n\r\nreturn (<GlobalContext.Provider value= {{\r\n    transactions:state.transactions,\r\n    deleteTranslation\r\n}}>\r\n    {children}\r\n\r\n</GlobalContext.Provider>)\r\n\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc,item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">₹{total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nexport const IncomeExpenses = () => {\r\n  const {transactions} = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction =>transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item>0)\r\n    .reduce((acc,item) => (acc + item),0)\r\n    .toFixed(2);\r\n\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc,item) => (acc += item),0)* -1\r\n  )  .toFixed(2);\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">+₹{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">-₹{expense}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const {deleteTranslation} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount <0 ? '-' : '+';\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n                        {transaction.text} <span>{sign}₹{Math.abs(transaction.amount)} </span>\r\n                        <button onClick ={() => deleteTranslation(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    \r\n    return (\r\n        <div>\r\n             <h3>History</h3>\r\n                <ul id=\"list\" className=\"list\">\r\n                    {transactions.map(transaction => ( <Transaction key={transaction.id} transaction={transaction} />))}\r\n                   \r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nexport const AddTranscation = (transaction) => {\r\n    const [text,setText] = useState('');\r\n    const [amount,setAmount] = useState(0);\r\n    const {addTranslation} = useContext(GlobalContext);\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTranslation ={\r\n            id:Math.floor(Math.random() * 1000000000),\r\n            text,\r\n            amount : +amount\r\n        }\r\n\r\n        addTranslation(newTranslation);\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <h3>Add new transaction</h3>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"text\">Text</label>\r\n                        <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n                    </div>\r\n                    <div className=\"form-control\">\r\n                        <label htmlFor=\"amount\">Amount <br />\r\n                        (negative - expense, positive - income)</label>\r\n                        <input type=\"number\" id=\"amount\" value={amount} onChange={(e) => setAmount(e.target.value)}placeholder=\"Enter amount...\" />\r\n                    </div>\r\n                    <button onClick ={() => addTranslation(transaction.id)} className=\"btn\">Add transaction</button>\r\n                </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport {Header }from './components/Header';\nimport {Balance}from './components/Balance';\nimport {IncomeExpenses}from './components/IncomeExpenses';\nimport './App.css';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTranscation } from './components/AddTranscation';\nimport {GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header / >\n      <div className=\"container\">\n        <Balance /> \n        <IncomeExpenses />\n        <TransactionList/>\n        <AddTranscation/>\n      </div>  \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}